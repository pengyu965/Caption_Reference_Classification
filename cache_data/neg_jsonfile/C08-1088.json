[
    {
        "Text": "\n\t\n\t\tThis paper proposes a new approach to dynamically determine the tree span for tree kernel-based semantic relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "It exploits constituent dependencies to keep the nodes and their head children along the path connecting the two entities, while removing the noisy information from the syntactic parse tree, eventually leading to a dynamic syntactic parse tree.",
        "Entity": "Normal"
    },
    {
        "Text": "This paper also explores entity features and their combined features in a unified parse and semantic tree, which integrates both structured syntactic parse information and entity-related semantic information.",
        "Entity": "Normal"
    },
    {
        "Text": "Evaluation on the ACE RDC 2004 corpus shows that our dynamic syntactic parse tree outperforms all previous tree spans, and the composite kernel combining this tree kernel with a linear state-of-the-art feature-based kernel, achieves the so far best performance.",
        "Entity": "Normal"
    },
    {
        "Text": "Information extraction is one of the key tasks in natural language processing.",
        "Entity": "Normal"
    },
    {
        "Text": "It attempts to identify relevant information from a large amount of natural language text documents.",
        "Entity": "Normal"
    },
    {
        "Text": "Of three sub- tasks defined by the ACE program1, this paper focuses exclusively on Relation Detection and Characterization (RDC) task, which detects and classifies semantic relationships between predefined types of entities in the ACE corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "For   2008.",
        "Entity": "Normal"
    },
    {
        "Text": "Licensed under the Creative Commons Attribution- Noncommercial-Share Alike 3.0 Unported license (http://creativecommons.org/licenses/by-nc-sa/3.0/).",
        "Entity": "Normal"
    },
    {
        "Text": "Some rights reserved.",
        "Entity": "Normal"
    },
    {
        "Text": "1 http://www.ldc.upenn.edu/Projects/ACE/ example, the sentence  Microsoft Corp. is based in Redmond, WA  conveys the relation  GPEAFF.Based  between  Microsoft Corp.  [ORG] and  Redmond  [GPE].",
        "Entity": "Normal"
    },
    {
        "Text": "Due to limited accuracy in state-of-the-art syntactic and semantic parsing, reliably extracting semantic relationships between named entities in natural language documents is still a difficult, unresolved problem.",
        "Entity": "Normal"
    },
    {
        "Text": "In the literature, feature-based methods have dominated the research in semantic relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "Featured-based methods achieve promising performance and competitive efficiency by transforming a relation example into a set of syntactic and semantic features, such as lexical knowledge, entity-related information, syntactic parse trees and deep semantic information.",
        "Entity": "Normal"
    },
    {
        "Text": "However, detailed research (Zhou et al., 2005) shows that it s difficult to extract new effective features to further improve the extraction accuracy.",
        "Entity": "Normal"
    },
    {
        "Text": "Therefore, researchers turn to kernel-based methods, which avoids the burden of feature engineering through computing the similarity of two discrete objects (e.g.",
        "Entity": "Normal"
    },
    {
        "Text": "parse trees) directly.",
        "Entity": "Normal"
    },
    {
        "Text": "From prior work (Zelenko et al., 2003; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005) to current research (Zhang et al., 2006; Zhou et al., 2007), kernel methods have been showing more and more potential in relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "The key problem for kernel methods on relation extraction is how to represent and capture the structured syntactic information inherent in relation instances.",
        "Entity": "Normal"
    },
    {
        "Text": "While kernel methods using the dependency tree (Culotta and Sorensen, 2004) and the shortest dependency path (Bunescu andMooney, 2005) suffer from low recall perform ance, convolution tree kernels (Zhang et al., 2006; Zhou et al., 2007) over syntactic parse trees achieve comparable or even better performance than feature-based methods.",
        "Entity": "Normal"
    },
    {
        "Text": "However, there still exist two problems regarding currently widely used tree spans.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhang et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2006) discover that the Shortest Path 697 Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 697 704 Manchester, August 2008 enclosed Tree (SPT) achieves the best performance.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhou et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2007) further extend it to Context-Sensitive Shortest Path-enclosed Tree (CS- SPT), which dynamically includes necessary predicate-linked path information.",
        "Entity": "Normal"
    },
    {
        "Text": "One problem with both SPT and CS-SPT is that they may still contain unnecessary information.",
        "Entity": "Normal"
    },
    {
        "Text": "The other problem is that a considerable number of useful context-sensitive information is also missing from SPT/CS-SPT, although CS-SPT includes some contextual information relating to predicate- linked path.",
        "Entity": "Normal"
    },
    {
        "Text": "This paper proposes a new approach to dynamically determine the tree span for relation extraction by exploiting constituent dependencies to remove the noisy information, as well as keep the necessary information in the parse tree.",
        "Entity": "Normal"
    },
    {
        "Text": "Our motivation is to integrate dependency information, which has been proven very useful to relation extraction, with the structured syntactic information to construct a concise and effective tree span specifically targeted for relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "Moreover, we also explore interesting combined entity features for relation extraction via a unified parse and semantic tree.",
        "Entity": "Normal"
    },
    {
        "Text": "The other sections in this paper are organized as follows.",
        "Entity": "Normal"
    },
    {
        "Text": "Previous work is first reviewed in Section 2.",
        "Entity": "Normal"
    },
    {
        "Text": "Then, Section 3 proposes a dynamic syntactic parse tree while the entity-related semantic tree is described in Section 4.",
        "Entity": "Normal"
    },
    {
        "Text": "Evaluation on the ACE RDC corpus is given in Section 5.",
        "Entity": "Normal"
    },
    {
        "Text": "Finally, we conclude our work in Section 6.",
        "Entity": "Normal"
    },
    {
        "Text": "Due to space limitation, here we only review kernel-based methods used in relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "For those interested in feature-based methods, please refer to Zhou et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2005) for more details.",
        "Entity": "Normal"
    },
    {
        "Text": "Zelenko et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2003) described a kernel between shallow parse trees to extract semantic relations, where a relation instance is transformed into the least common sub-tree connecting the two entity nodes.",
        "Entity": "Normal"
    },
    {
        "Text": "The kernel matches the nodes of two corresponding sub-trees from roots to leaf nodes recursively layer by layer in a top- down manner.",
        "Entity": "Normal"
    },
    {
        "Text": "Their method shows successful results on two simple extraction tasks.",
        "Entity": "Normal"
    },
    {
        "Text": "Culotta and Sorensen (2004) proposed a slightly generalized version of this kernel between dependency trees, in which a successful match of two relation instances requires the nodes to be at the same layer and in the identical path starting from the roots to the current nodes.",
        "Entity": "Normal"
    },
    {
        "Text": "These strong constraints make their kernel yield high precision but very low recall on the ACE RDC 2003 corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "Bunescu and Mooney (2005) develop a shortest path dependency tree kernel, which simply counts the number of common word classes at each node in the shortest paths between two entities in dependency trees.",
        "Entity": "Normal"
    },
    {
        "Text": "Similar to Culotta and Sorensen (2004), this method also suffers from high precision but low recall.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhang et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2006) describe a convolution tree kernel (CTK, Collins and Duffy, 2001) to investigate various structured information for relation extraction and find that the Shortest Path- enclosed Tree (SPT) achieves the F-measure of 67.7 on the 7 relation types of the ACE RDC 2004 corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "One problem with SPT is that it loses the contextual information outside SPT, which is usually critical for relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhou et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2007) point out that both SPT and the convolution tree kernel are context-free.",
        "Entity": "Normal"
    },
    {
        "Text": "Theyexpand SPT to CS-SPT by dynamically includ ing necessary predicate-linked path information and extending the standard CTK to context- sensitive CTK, obtaining the F-measure of 73.2 on the 7 relation types of the ACE RDC 2004 corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "However, the CS-SPT only recovers part of contextual information and may contain noisy information as much as SPT.",
        "Entity": "Normal"
    },
    {
        "Text": "In order to fully utilize the advantages of feature-based methods and kernel-based methods, researchers turn to composite kernel methods.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhao and Grishman (2005) define several feature-based composite kernels to capture diverse linguistic knowledge and achieve the F-measure of 70.4 on the 7 relation types in the ACE RDC 2004 corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhang et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2006) design a composite kernel consisting of an entity linear kernel and a standard CTK, obtaining the F-measure of 72.1 on the 7 relation types in the ACE RDC 2004 corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhou et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2007) describe a composite kernel to integrate a context-sensitive CTK and a state-of-the-art linear kernel.",
        "Entity": "Normal"
    },
    {
        "Text": "It achieves the so far best F-measure of 75.8 on the 7 relation types in the ACE RDC 2004 corpus.",
        "Entity": "Normal"
    },
    {
        "Text": "In this paper, we will further study how to dynamically determine a concise and effective tree span for a relation instance by exploiting constituent dependencies inherent in the parse tree derivation.",
        "Entity": "Normal"
    },
    {
        "Text": "We also attempt to fully capture both the structured syntactic parse information and entity-related semantic information, especially combined entity features, via a unified parse and semantic tree.",
        "Entity": "Normal"
    },
    {
        "Text": "Finally, we validate the effectiveness of a composite kernel for relation extraction, which combines a tree kernel and a linear kernel.",
        "Entity": "Normal"
    },
    {
        "Text": "This section discusses how to generate dynamic syntactic parse tree by employing constituent dependencies to overcome the problems existing in currently used tree spans.",
        "Entity": "Normal"
    },
    {
        "Text": "3.1 Constituent Dependencies in Parse Tree.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhang et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2006) explore five kinds of tree spans and find that the Shortest Path-enclosed Tree (SPT) achieves the best performance.",
        "Entity": "Normal"
    },
    {
        "Text": "Zhou et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2007) further propose Context-Sensitive SPT (CS-SPT), which can dynamically determine the tree span by extending the necessary predicate-linked path information outside SPT.",
        "Entity": "Normal"
    },
    {
        "Text": "However, the key problem of how to represent the structured syntactic parse tree is still partially resolved.",
        "Entity": "Normal"
    },
    {
        "Text": "As we indicate as follows, current tree spans suffer from two problems: (1) Both SPT and CS-SPT still contain unnecessary information.",
        "Entity": "Normal"
    },
    {
        "Text": "For example, in the sentence   bought one of town s two meat-packing plants , the condensed information  one of plants  is sufficient to determine  DISC  relationship between the entities  one  [FAC] and  plants  [FAC], while SPT/CS-SPT include the redundant underlined part.",
        "Entity": "Normal"
    },
    {
        "Text": "Therefore more unnecessary information can be safely removed from SPT/CS-SPT.",
        "Entity": "Normal"
    },
    {
        "Text": "(2) CS-SPT only captures part of context- sensitive information relating to predicate-linked structure (Zhou et al., 2007) and still loses much context-sensitive information.",
        "Entity": "Normal"
    },
    {
        "Text": "Let s take the same example sentence   bought one of town s two meat-packing plants , where indeed there is no relationship between the entities  one  [FAC] and  town  [GPE].",
        "Entity": "Normal"
    },
    {
        "Text": "Nevertheless, the information contained in SPT/CS-SPT ( one of town ) may easily lead to their relationship being misclassified as  DISC , which is beyond our expectation.",
        "Entity": "Normal"
    },
    {
        "Text": "Therefore the underlined part outside SPT/CS- SPT should be recovered so as to differentiate it from positive instances.",
        "Entity": "Normal"
    },
    {
        "Text": "Since dependency plays a key role in many NLP problems such as syntactic parsing, semantic role labeling as well as semantic relation extraction, our motivation is to exploit dependency knowledge to distinguish the necessary evidence from the unnecessary information in the structured syntactic parse tree.",
        "Entity": "Normal"
    },
    {
        "Text": "On one hand, lexical or word-word dependency indicates the relationship among words occurring in the same sentence, e.g.",
        "Entity": "Normal"
    },
    {
        "Text": "predicate- argument dependency means that arguments are dependent on their target predicates, modifier head dependency means that modifiers are dependent on their head words.",
        "Entity": "Normal"
    },
    {
        "Text": "This dependency relationship offers a very condensed representation of the information needed to assess the relationship in the forms of the dependency tree (Culotta and Sorensen, 2004) or the shortest dependency path (Bunescu and Mooney, 2005) that includes both entities.",
        "Entity": "Normal"
    },
    {
        "Text": "On the other hand, when the parse tree corresponding to the sentence is derived using derivation rules from the bottom to the top, the word- word dependencies extend upward, making a unique head child containing the head word for every non-terminal constituent.",
        "Entity": "Normal"
    },
    {
        "Text": "As indicated as follows, each CFG rule has the form: P   Ln L1 H R1 Rm Here, P is the parent node, H is the head child of the rule, Ln L1 and R1 Rm are left and right modifiers of H respectively, and both n and m may be zero.",
        "Entity": "Normal"
    },
    {
        "Text": "In other words, the parent node P depends on the head child H, this is what we call constituent dependency.",
        "Entity": "Normal"
    },
    {
        "Text": "Vice versa, we can also determine the head child of a constituent in terms of constituent dependency.",
        "Entity": "Normal"
    },
    {
        "Text": "Our hypothesis stipulates that the contribution of the parse tree to establishing a relationship is almost exclusively concentrated in the path connecting the two entities, as well as the head children of constituent nodes along this path.",
        "Entity": "Normal"
    },
    {
        "Text": "3.2 Generation of Dynamic Syntactic Parse.",
        "Entity": "Normal"
    },
    {
        "Text": "Tree Starting from the Minimum Complete Tree (MCT, the complete sub-tree rooted by the nearest common ancestor of the two entities under consideration) as the representation of each relation instance, along the path connecting two entities, the head child of every node is found according to various constituent dependencies.",
        "Entity": "Normal"
    },
    {
        "Text": "Then the path nodes and their head children are kept while any other nodes are removed from the tree.",
        "Entity": "Normal"
    },
    {
        "Text": "Eventually we arrive at a tree called Dynamic Syntactic Parse Tree (DSPT), which is dynamically determined by constituent dependencies and only contains necessary information as expected.",
        "Entity": "Normal"
    },
    {
        "Text": "There exist a considerable number of constituent dependencies in CFG as described by Collins (2003).",
        "Entity": "Normal"
    },
    {
        "Text": "However, since our task is to extract the relationship between two named entities, our focus is on how to condense Noun-Phrases (NPs) and other useful constituents for relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "Therefore constituent dependencies can be classified according to constituent types of the CFG rules: (1) Modification within base-NPs: base-NPs mean that they do not directly dominate an NP themselves, unless the dominated NP is a possessive NP.",
        "Entity": "Normal"
    },
    {
        "Text": "The noun phrase right above the entity headword, whose mention type is nominal or name, can be categorized into this type.",
        "Entity": "Normal"
    },
    {
        "Text": "In this case, the entity headword is also the headword of the noun phrase, thus all the constituents before the headword are dependent on the headword, and may be removed from the parse tree, while the headword and the constituents right after the headword remain unchanged.",
        "Entity": "Normal"
    },
    {
        "Text": "In this way the parse tree  one of plants  could capture the  DISC  relationship more concisely and precisely.",
        "Entity": "Normal"
    },
    {
        "Text": "For both SPT and CS-SPT, this example would be condensed to  one of town  and therefore easily misclassified as the  DISC  relationship between the two entities.",
        "Entity": "Normal"
    },
    {
        "Text": "In the contrast, our DSPT can avoid this problem by keeping the constituent   s  and the headword  plants .",
        "Entity": "Normal"
    },
    {
        "Text": "(2) Modification to NPs: except base-NPs, other modification to NPs can be classified into this type.",
        "Entity": "Normal"
    },
    {
        "Text": "Usually these NPs are recursive, meaning that they contain another NP as their child.",
        "Entity": "Normal"
    },
    {
        "Text": "The CFG rules corresponding to these modifications may have the following forms: NP   NP SBAR [relative clause] NP   NP VP [reduced relative] NP   NP PP [PP attachment] Here, the NPs in bold mean that the path connecting the two entities passes through them.",
        "Entity": "Normal"
    },
    {
        "Text": "For every right hand side, the NP in bold is modified by the constituent following them.",
        "Entity": "Normal"
    },
    {
        "Text": "That is, the latter is dependent on the former, and may be reduced to a single NP.",
        "Entity": "Normal"
    },
    {
        "Text": ".",
        "Entity": "Normal"
    },
    {
        "Text": "Since the reduced relative  nominated for    modifies and is therefore dependent on the  people , they can be removed from the parse tree, that is, the right side ( NP VP ) can be reduced to the left hand side, which is exactly a single NP.",
        "Entity": "Normal"
    },
    {
        "Text": "NP PP NP NP NP NP PP NP NP NP PP NP NP NP NP PP VP NP NP E1FAC E-GPE E1FACE2-FAC E1 PER QP E2-PER E1-PER E2-PER NN DT NN CD JJ NN NN NN IN RB CD NNS NN NNS one the town two meat-packing one plants one of about 500 people one people (a) Removal of constituents before the headword in base-NP (c) Reduction of modification to NP NP E1-PER NP P P N P NP E 2 G P E E-FAC NP E1FAC NP PP NP E2 GPE NP E-FAC NP S B A R S VP PP NP SBAR S NN IN DT NN POS CD JJ NN NN IN NN POS NN NP NP NP NP NP one of the town 's two meat-packing plants one of town 's plants E1FAC E2-PER NP E1FAC E2-PER VP (b) Keeping of constituents after the headword in base-NP JJ NN PRP VBZ IN DT NNS NN PRP VBZ rental NP property he owns in the state property he owns PP NP NP PP (d) Removal of arguments to verb NP NP NP NP NP NP E1-PER E-GPE E-GPE E2GPE E1-PER E2GPE NNS IN NNP , NNP NNP , CC NNP NNS IN NNP governors from connecticut , south dakota , and montana governors from montana (e)                                                     \n\t\t\tRemoval and reduction of constituents using dependencies (3) Arguments/adjuncts to verbs: this type includes the CFG rules in which the left side includes S, SBAR or VP.",
        "Entity": "Normal"
    },
    {
        "Text": "An argument represents the subject or object of a verb, while an adjunct indicates the location, date/time or way of the action corresponding to the verb.",
        "Entity": "Normal"
    },
    {
        "Text": "They depend on the verb and can be removed if they are not included in the path connecting the two entities.",
        "Entity": "Normal"
    },
    {
        "Text": "However, when the parent tag is S or SBAR, and its child VP is not included in the path, this VP should be recovered to indicate the predicate verb.",
        "Entity": "Normal"
    },
    {
        "Text": ".",
        "Entity": "Normal"
    },
    {
        "Text": "While PP can be removed from the rule ( VP  VBZ PP ), the VP should be kept in the rule ( S  NP VP ).",
        "Entity": "Normal"
    },
    {
        "Text": "Consequently, the tree span looks more concise and precise for relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "(4) Coordination conjunctions: In coordination constructions, several peer conjuncts may be reduced into a single constituent.",
        "Entity": "Normal"
    },
    {
        "Text": "Although the first conjunct is always considered as the headword (Collins, 2003), actually all the conjuncts play an equal role in relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "(2007) further indicates that among these entity features, entity type, subtype, and mention type, as well as the base form of predicate verb, contribute most while the contribution of other features, such as entity class, headword and GPE role, can be ignored.",
        "Entity": "Normal"
    },
    {
        "Text": "In the example sentence  they  re here , which is excerpted from the ACE RDC 2004 corpus, there exists a relationship  Physical.Located  between the entities  they  [PER] and  here  [GPE.Population-Center].",
        "Entity": "Normal"
    },
    {
        "Text": "The features are encoded as  TP ,  ST ,  MT  and  PVB , which denote type, subtype, mention-type of the two entities, and the base form of predicate verb if existing (nearest to the 2nd entity along the path connecting the two entities) respectively.",
        "Entity": "Normal"
    },
    {
        "Text": "For example, the tag  TP1  represents the type of the 1st entity, and the tag  ST2  represents the sub- type of the 2nd entity.",
        "Entity": "Normal"
    },
    {
        "Text": "The three entity-related semantic tree setups are depicted as follows: ENT sentence ( governors from connecticut, south TP1 ST1 MT1 TP2 ST2 MT2 PVB dakota, and montana ) can be reduced to a single NP ( governors from montana ) by keeping the conjunct in the path while removing the other conjuncts.",
        "Entity": "Normal"
    },
    {
        "Text": "PER null PRO GPE Pop.",
        "Entity": "Normal"
    },
    {
        "Text": "PRO be (a) Bag Of Features(BOF) ENT (5) Modification to other constituents: except for the above four types, other CFG rules fall into this type, such as modification to PP, ADVP and PRN etc.",
        "Entity": "Normal"
    },
    {
        "Text": "These cases are similar to arguments/adjuncts to verbs, but less frequent than them, so we will not detail this scenario.In fact, SPT (Zhang et al., 2006) can be ar TP ST MT TP1 TP2 ST1 ST2 MT1 MT2 PER GPE null Pop.",
        "Entity": "Normal"
    },
    {
        "Text": "PRO PRO (b) Feature Paired Tree(FPT) ENT E1 E2 PVB be PVBrived at by carrying out part of the above re TP1 ST1 MT1 TP2 ST2 MT2 be moval operations using a single rule (i.e.",
        "Entity": "Normal"
    },
    {
        "Text": "all the constituents outside the linking path should be removed) and CS-CSPT (Zhou et al., 2007) further recovers part of necessary context-sensitive information outside SPT, this justifies that SPT performs well, while CS-SPT outperforms SPT.",
        "Entity": "Normal"
    },
    {
        "Text": "Entity semantic features, such as entity headword, entity type and subtype etc., impose a strong constraint on relation types in terms of relation definition by the ACE RDC task.",
        "Entity": "Normal"
    },
    {
        "Text": "Experiments by Zhang et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2006) show that linear kernel using only entity features contributes much when combined with the convolution parse tree kernel.",
        "Entity": "Normal"
    },
    {
        "Text": "PER null PRO GPE Pop.",
        "Entity": "Normal"
    },
    {
        "Text": "Different setups for entity-related se mantic tree (EST) (a) Bag of Features (BOF, e.g.",
        "Entity": "Normal"
    },
    {
        "Text": "Fig.",
        "Entity": "Normal"
    },
    {
        "Text": "2(a)): all feature nodes uniformly hang under the root node, so the tree kernel simply counts the number of common features between two relation instances.",
        "Entity": "Normal"
    },
    {
        "Text": "This tree setup is similar to linear entity kernel explored by Zhang et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2006).",
        "Entity": "Normal"
    },
    {
        "Text": "(b) Feature-Paired Tree (FPT, e.g.",
        "Entity": "Normal"
    },
    {
        "Text": "Fig.",
        "Entity": "Normal"
    },
    {
        "Text": "2(b)): the features of two entities are grouped into different types according to their feature names, e.g.",
        "Entity": "Normal"
    },
    {
        "Text": "TP1  and  TP2  are grouped to  TP .",
        "Entity": "Normal"
    },
    {
        "Text": "This tree setup is aimed to capture the additional similarity of the single feature combined from different entities, i.e., the first and the second entities.",
        "Entity": "Normal"
    },
    {
        "Text": "(c) Entity-Paired Tree (EPT, e.g.",
        "Entity": "Normal"
    },
    {
        "Text": "Fig.",
        "Entity": "Normal"
    },
    {
        "Text": "2(c)): all the features relating to an entity are grouped to nodes  E1  or  E2 , thus this tree kernel can further explore the equivalence of combined entity features only relating to one of the entities between two relation instances.",
        "Entity": "Normal"
    },
    {
        "Text": "In fact, the BOF only captures the individual entity features, while the FPT/EPT can additionally capture the bi-gram/tri-gram features respectively.",
        "Entity": "Normal"
    },
    {
        "Text": "Rather than constructing a composite kernel, we incorporate the EST into the DSPT to produce a Unified Parse and Semantic Tree (UPST) to investigate the contribution of the EST to relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "However, detailed evaluation (Qian et al., 2007) indicates that the UPST achieves the best performance when the feature nodes are attached under the top node.",
        "Entity": "Normal"
    },
    {
        "Text": "Hence, we also attach three kinds of entity-related semantic trees (i.e.",
        "Entity": "Normal"
    },
    {
        "Text": "BOF, FPT and EPT) under the top node of the DSPT right after its original children.",
        "Entity": "Normal"
    },
    {
        "Text": "Thereafter, we employ the standard CTK (Collins and Duffy, 2001) to compute the similarity between two (Moschitti, 2004) 2 is selected as our classifier.",
        "Entity": "Normal"
    },
    {
        "Text": "For efficiency, we apply the one vs. others strategy, which builds K classifiers so as to separate one class from all others.",
        "Entity": "Normal"
    },
    {
        "Text": "For comparison purposes, the training parameters C (SVM) and   (tree kernel) are also set to 2.4 and 0.4 respectively.",
        "Entity": "Normal"
    },
    {
        "Text": "5.2 Experimental Results.",
        "Entity": "Normal"
    },
    {
        "Text": "The MCT with only entity-type information is first used as the baseline, and various constituent dependencies are then applied sequentially to dynamically reshaping the tree in two different modes: --[M1] Respective: every constituent dependency is individually applied on MCT.",
        "Entity": "Normal"
    },
    {
        "Text": "--[M2] Accumulative: every constituent dependency is incrementally applied on the previously derived tree span, which begins with the MCT and eventually gives rise to a Dynamic Syntactic Parse Tree (DSPT).",
        "Entity": "Normal"
    },
    {
        "Text": "Dependency types P(%) R(%) F MCT (baseline) 75.1 53.8 62.7 UPSTs, since this CTK and its variations are Modification within 76.5 59.8 67.1successfully applied in syntactic parsing, seman tic role labeling (Moschitti, 2004) and relation base-NPs (59.8) (59.8) (67.1) extraction (Zhang et al., 2006; Zhou et al., 2007) Modification to NPs 77.0 63.2 69.4 as well.",
        "Entity": "Normal"
    },
    {
        "Text": "(76.2) (56.9) (65.1) Arguments/adjuncts to verb 77.1 63.9 69.9\n\t\n\t\n\t\t\t(76.1) (57.5) (65.5) Coordination conjunctions 77.3 65.2 70.8 This section will evaluate the effectiveness of the (77.3) (55.1) (63.8)DSPT and the contribution of entity-related se Other modifications 77.4 65.4 70.9 mantic information through experiments.",
        "Entity": "Normal"
    },
    {
        "Text": "5.1 Experimental Setting.",
        "Entity": "Normal"
    },
    {
        "Text": "For evaluation, we use the ACE RDC 2004 corpus as the benchmark data.",
        "Entity": "Normal"
    },
    {
        "Text": "This data set contains 451 documents and 5702 relation instances.",
        "Entity": "Normal"
    },
    {
        "Text": "It defines 7 entity types, 7 major relation types and 23 subtypes.",
        "Entity": "Normal"
    },
    {
        "Text": "For comparison with previous work, evaluation is done on 347 (nwire/bnews) documents and 4307 relation instances using 5-fold cross-validation.",
        "Entity": "Normal"
    },
    {
        "Text": "Here, the corpus is parsed using Charniak s parser (Charniak, 2001) and relation instances are generated by iterating over all pairs of entity mentions occurring in the same sentence with given  true  mentions and coreferential information.",
        "Entity": "Normal"
    },
    {
        "Text": "I                                                                                                            .",
        "Entity": "Normal"
    },
    {
        "Text": "This indicates that reshaping the tree by exploiting constituent dependencies may significantly improve extraction accuracy largely due to the increase in recall.",
        "Entity": "Normal"
    },
    {
        "Text": "It further suggests that constituent dependencies knowledge is very effec 2 http://ainlp.info.uniroma2.it/moschitti/ tive and can be fully utilized in tree kernel-based relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "This indicates the local characteristic of semantic relations, which can be effectively captured by NPs near the two involved entities in the DSPT.",
        "Entity": "Normal"
    },
    {
        "Text": "(2) All the other three dependencies show minor contribution to performance enhancement, they improve the F-measure only by 2.8/0.9/-0.1 units in mode M1 and 0.5/0.9/0.1 units in mode M2.",
        "Entity": "Normal"
    },
    {
        "Text": "This may be due to the reason that these dependencies only remove the nodes far from the two entities.",
        "Entity": "Normal"
    },
    {
        "Text": "It shows that: (1) All the three unified parse and semantic tree kernels significantly outperform the DSPT kernel, obtaining an average increase of ~4 units in F-measure.",
        "Entity": "Normal"
    },
    {
        "Text": "This means that they can effectively capture both the structured syntactic information and the entity-related semantic features.",
        "Entity": "Normal"
    },
    {
        "Text": "(2) The Unified Parse and Semantic Tree with Feature-Paired Tree achieves the best performance of 80.1/70.7/75.1 in P/R/F respectively, with an increase of F-measure by 0.4/0.3 units over BOF and EPT respectively.",
        "Entity": "Normal"
    },
    {
        "Text": "This suggests that additional bi-gram entity features capturedby FPT are more useful than tri-gram entity fea tures captured by EPT.",
        "Entity": "Normal"
    },
    {
        "Text": "Performance of Unified Parse and Semantic Trees (UPSTs) on the 7 relation types of the ACE RDC 2004 corpus tree spans.",
        "Entity": "Normal"
    },
    {
        "Text": "It also shows that the Unified Parse and Semantic Tree with Feature-Paired Tree perform significantly better than the other two tree setups (i.e., CS-SPT and DSPT) by 6.7/4.2 units in F-measure respectively.",
        "Entity": "Normal"
    },
    {
        "Text": "This implies that the entity-related semantic information is very useful and contributes much when they are incorporated into the parse tree for relation extraction.",
        "Entity": "Normal"
    },
    {
        "Text": "It shows that our UPST outperforms all previous tree setups using one single kernel, and even better than two previous composite kernels (Zhang et al., 2006; Zhao and Grishman, 2005).",
        "Entity": "Normal"
    },
    {
        "Text": "Furthermore, when the UPST (FPT) kernel is com bined with a linear state-of-the-state feature- based kernel (Zhou et al., 2005) into a composite one via polynomial interpolation in a setting similar to Zhou et al.",
        "Entity": "Normal"
    },
    {
        "Text": "(2007) (i.e.",
        "Entity": "Normal"
    },
    {
        "Text": "polynomial degree d=2 and coefficient  =0.3), we get the so far best performance of 77.1 in F-measure for 7 relation types on the ACE RDC 2004 data set.",
        "Entity": "Normal"
    },
    {
        "Text": "Systems P(%) R(%) F Ours:                                                                                                                                                                                                                                                                                                                                                                          \n\t\t\t                                                                                                                                      \n\t\t\tIt shows that in a similar setting, our DSPT outperforms SPT by 3.8 units in F-measure, while CS-SPT outperforms SPT by 1.3 units in F-measure.",
        "Entity": "Normal"
    },
    {
        "Text": "This suggests that the DSPT performs best among these 3 We arrive at these values by subtracting P/R/F.",
        "Entity": "Normal"
    },
    {
        "Text": "(79.6/5.6/71.9) of                                                                                                                                                           4 There might be some typing errors for the performance.",
        "Entity": "Normal"
    },
    {
        "Text": "reported in Zhao and Grishman (2005) since P, R and F do not match.",
        "Entity": "Normal"
    },
    {
        "Text": "This paper further explores the potential of structured syntactic information for tree kernel-based relation extraction, and proposes a new approach to dynamically determine the tree span (DSPT) for relation instances by exploiting constituent dependencies.",
        "Entity": "Normal"
    },
    {
        "Text": "We also investigate different ways of how entity-related semantic features and their combined features can be effectively captured in a Unified Parse and Semantic Tree (UPST).",
        "Entity": "Normal"
    },
    {
        "Text": "Evaluation on the ACE RDC 2004 corpus shows that our DSPT is appropriate for structured representation of relation instances.",
        "Entity": "Normal"
    },
    {
        "Text": "We also find that, in addition to individual entity features, combined entity features (especially bi-gram) contribute much when they are combined with a DPST into a UPST.",
        "Entity": "Normal"
    },
    {
        "Text": "And the composite kernel, combining the UPST kernel and a linear state-of- the-art kernel, yields the so far best performance.",
        "Entity": "Normal"
    },
    {
        "Text": "For the future work, we will focus on improving performance of complex structured parse trees, where the path connecting the two entities involved in a relationship is too long for current kernel methods to take effect.",
        "Entity": "Normal"
    },
    {
        "Text": "Our preliminary experiment of applying certain discourse theory exhibits certain positive results.",
        "Entity": "Normal"
    },
    {
        "Text": "This research is supported by Project 60673041 under the National Natural Science Foundation of China, Project 2006AA01Z147 under the  863  National High-Tech Research and Development of China, and the National Research Foundation for the Doctoral Program of Higher Education of China under Grant No.",
        "Entity": "Normal"
    },
    {
        "Text": "20060285008.",
        "Entity": "Normal"
    },
    {
        "Text": "We would also like to thank the excellent and insightful comments from the three anonymous reviewers.",
        "Entity": "Normal"
    }
]